; ModuleID = 'Chr1'
source_filename = "Chr1"

declare i32 @CHR(i64)

declare void @Out_Ln()

declare void @Out_Int(i64, i64)

declare void @Out_Char(i32)

define internal void @Chr1_Chr(i64 %x, i32 %ch) {
entry:
  %ch2 = alloca i32
  %x1 = alloca i64
  store i64 %x, i64* %x1
  store i32 %ch, i32* %ch2
  %x3 = load i64, i64* %x1
  call void @Out_Int(i64 %x3, i64 4)
  %ch4 = load i32, i32* %ch2
  call void @Out_Char(i32 %ch4)
  %x5 = load i64, i64* %x1
  %0 = call i32 @CHR(i64 %x5)
  call void @Out_Char(i32 %0)
  call void @Out_Ln()
  ret void
}

define void @Chr1_Test() {
entry:
  call void @Chr1_Chr(i64 65, i32 65)
  call void @Chr1_Chr(i64 97, i32 97)
  call void @Chr1_Chr(i64 255, i32 255)
  ret void
}

define i64 @output() {
entry:
  call void @Chr1_Test()
  ret i64 0
}
