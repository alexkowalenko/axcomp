; ModuleID = 'HOTDesignator1'
source_filename = "HOTDesignator1"

@STRING_0 = private global [3 x i32] [i32 97, i32 98, i32 0]

declare void @Out_Ln()

declare void @Out_Char(i32)

define internal i32 @HOTDesignator1_Get([0 x i32]* %str, i64 %n) {
entry:
  %n2 = alloca i64
  %str1 = alloca [0 x i32]*
  store [0 x i32]* %str, [0 x i32]** %str1
  store i64 %n, i64* %n2
  %str3 = load [0 x i32]*, [0 x i32]** %str1
  %n4 = load i64, i64* %n2
  %0 = load [0 x i32]*, [0 x i32]** %str1
  %idx = getelementptr [0 x i32], [0 x i32]* %0, i64 0, i64 %n4
  %idx5 = load i32, i32* %idx
  ret i32 %idx5
}

define void @HOTDesignator1_Test() {
entry:
  %0 = call i32 @HOTDesignator1_Get([0 x i32]* bitcast ([3 x i32]* @STRING_0 to [0 x i32]*), i64 0)
  call void @Out_Char(i32 %0)
  call void @Out_Ln()
  %1 = call i32 @HOTDesignator1_Get([0 x i32]* bitcast ([3 x i32]* @STRING_0 to [0 x i32]*), i64 1)
  call void @Out_Char(i32 %1)
  call void @Out_Ln()
  %2 = call i32 @HOTDesignator1_Get([0 x i32]* bitcast ([3 x i32]* @STRING_0 to [0 x i32]*), i64 2)
  call void @Out_Char(i32 %2)
  call void @Out_Ln()
  ret void
}

define i64 @output() {
entry:
  call void @HOTDesignator1_Test()
  ret i64 0
}
