; ModuleID = 'ConstFold12'
source_filename = "ConstFold12"

@ConstFold12_andFF = internal constant i1 false
@ConstFold12_andTF = internal constant i1 false
@ConstFold12_andFT = internal constant i1 false
@ConstFold12_andTT = internal constant i1 true
@ConstFold12_orFF = internal constant i1 false
@ConstFold12_orTF = internal constant i1 true
@ConstFold12_orFT = internal constant i1 true
@ConstFold12_orTT = internal constant i1 true
@ConstFold12_notT = internal constant i1 false
@ConstFold12_notF = internal constant i1 true

declare void @Out_Ln()

declare void @Out_Bool(i1)

define void @ConstFold12_Test() {
entry:
  %andFF = load i1, i1* @ConstFold12_andFF
  call void @Out_Bool(i1 %andFF)
  call void @Out_Ln()
  %andTF = load i1, i1* @ConstFold12_andTF
  call void @Out_Bool(i1 %andTF)
  call void @Out_Ln()
  %andFT = load i1, i1* @ConstFold12_andFT
  call void @Out_Bool(i1 %andFT)
  call void @Out_Ln()
  %andTT = load i1, i1* @ConstFold12_andTT
  call void @Out_Bool(i1 %andTT)
  call void @Out_Ln()
  %orFF = load i1, i1* @ConstFold12_orFF
  call void @Out_Bool(i1 %orFF)
  call void @Out_Ln()
  %orTF = load i1, i1* @ConstFold12_orTF
  call void @Out_Bool(i1 %orTF)
  call void @Out_Ln()
  %orFT = load i1, i1* @ConstFold12_orFT
  call void @Out_Bool(i1 %orFT)
  call void @Out_Ln()
  %orTT = load i1, i1* @ConstFold12_orTT
  call void @Out_Bool(i1 %orTT)
  call void @Out_Ln()
  %notT = load i1, i1* @ConstFold12_notT
  call void @Out_Bool(i1 %notT)
  call void @Out_Ln()
  %notF = load i1, i1* @ConstFold12_notF
  call void @Out_Bool(i1 %notF)
  call void @Out_Ln()
  ret void
}

define i64 @output() {
entry:
  call void @ConstFold12_Test()
  ret i64 0
}
