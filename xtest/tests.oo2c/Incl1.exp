; ModuleID = 'Incl1'
source_filename = "Incl1"

declare void @Out_Ln()

declare void @Out_Set(i64)

define void @Incl1_Test() {
entry:
  %s = alloca i64
  store i64 0, i64* %s
  store i64 0, i64* %s
  %0 = load i64, i64* %s
  %1 = or i64 %0, 1
  store i64 %1, i64* %s
  %s1 = load i64, i64* %s
  call void @Out_Set(i64 %s1)
  call void @Out_Ln()
  %2 = load i64, i64* %s
  %3 = or i64 %2, 2147483648
  store i64 %3, i64* %s
  %s2 = load i64, i64* %s
  call void @Out_Set(i64 %s2)
  call void @Out_Ln()
  %4 = load i64, i64* %s
  %5 = and i64 %4, -2
  store i64 %5, i64* %s
  %s3 = load i64, i64* %s
  call void @Out_Set(i64 %s3)
  call void @Out_Ln()
  %6 = load i64, i64* %s
  %7 = and i64 %6, -2147483649
  store i64 %7, i64* %s
  %s4 = load i64, i64* %s
  call void @Out_Set(i64 %s4)
  call void @Out_Ln()
  ret void
}

define i64 @output() {
entry:
  call void @Incl1_Test()
  ret i64 0
}
