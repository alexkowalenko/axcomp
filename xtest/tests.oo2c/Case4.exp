; ModuleID = 'Case4'
source_filename = "Case4"

define internal void @Case4_P(i64 %i, i64 %j) {
entry:
  %j2 = alloca i64
  %i1 = alloca i64
  store i64 %i, i64* %i1
  store i64 %j, i64* %j2
  %i3 = load i64, i64* %i1
  switch i64 %i3, label %range [
  ]

range:                                            ; preds = %entry
  br label %case.range0

case.range0:                                      ; preds = %range
  %0 = icmp sle i64 1, %i3
  %j4 = load i64, i64* %j2
  %1 = icmp sle i64 %i3, %j4
  %2 = and i1 %0, %1
  br i1 %2, label %case.element0, label %case_end

case.element0:                                    ; preds = %case.range0
  br label %case_end

case_end:                                         ; preds = %case.element0, %case.range0
  ret void
}

define i64 @output() {
entry:
  call void @Case4_P(i64 1, i64 3)
  ret i64 0
}
