; ModuleID = 'Undef12'
source_filename = "Undef12"

@STRING_0 = private global [6 x i32] [i32 65, i32 102, i32 116, i32 101, i32 114, i32 0]

declare void @Out_Ln()

declare void @Out_String([0 x i32]*)

define i1 @Undef12_Fct() {
entry:
  br i1 false, label %assert, label %merge

assert:                                           ; preds = %entry
  %0 = call i64 @HALT(i64 1)
  br label %merge

merge:                                            ; preds = %assert, %entry
  call void @Out_String([0 x i32]* bitcast ([6 x i32]* @STRING_0 to [0 x i32]*))
  call void @Out_Ln()
  ret void <badref>
}

declare i64 @HALT(i64)

define i64 @output() {
entry:
  %0 = call i1 @Undef12_Fct()
  ret i64 0
}
