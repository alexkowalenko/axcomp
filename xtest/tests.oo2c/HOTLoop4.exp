; ModuleID = 'HOTLoop4'
source_filename = "HOTLoop4"

declare void @Out_Ln()

declare void @Out_Int(i64, i64)

define internal i64 @HOTLoop4_Div10(i64 %i) {
entry:
  %j = alloca i64
  %i1 = alloca i64
  store i64 %i, i64* %i1
  store i64 0, i64* %j
  store i64 -1, i64* %j
  br label %loop

loop:                                             ; preds = %ifcont, %entry
  %i2 = load i64, i64* %i1
  %0 = icmp eq i64 %i2, 0
  br i1 %0, label %then, label %elsif0

then:                                             ; preds = %loop
  store i64 0, i64* %j
  br label %end

elsif0:                                           ; preds = %loop
  %i3 = load i64, i64* %i1
  %1 = icmp eq i64 %i3, 10
  br i1 %1, label %then4, label %else

then4:                                            ; preds = %elsif0
  store i64 1, i64* %j
  br label %end

else:                                             ; preds = %elsif0
  %2 = load i64, i64* %i1
  %dec = sub i64 %2, 1
  store i64 %dec, i64* %i1
  br label %ifcont

ifcont:                                           ; preds = %else
  br label %loop

end:                                              ; preds = %then4, %then
  %j5 = load i64, i64* %j
  ret i64 %j5
}

define void @HOTLoop4_Test() {
entry:
  %0 = call i64 @HOTLoop4_Div10(i64 0)
  call void @Out_Int(i64 %0, i64 0)
  call void @Out_Ln()
  %1 = call i64 @HOTLoop4_Div10(i64 1)
  call void @Out_Int(i64 %1, i64 0)
  call void @Out_Ln()
  %2 = call i64 @HOTLoop4_Div10(i64 9)
  call void @Out_Int(i64 %2, i64 0)
  call void @Out_Ln()
  %3 = call i64 @HOTLoop4_Div10(i64 10)
  call void @Out_Int(i64 %3, i64 0)
  call void @Out_Ln()
  %4 = call i64 @HOTLoop4_Div10(i64 11)
  call void @Out_Int(i64 %4, i64 0)
  call void @Out_Ln()
  ret void
}

define i64 @output() {
entry:
  call void @HOTLoop4_Test()
  ret i64 0
}
