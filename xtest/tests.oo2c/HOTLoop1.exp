; ModuleID = 'HOTLoop1'
source_filename = "HOTLoop1"

@STRING_0 = private global [0 x i32] zeroinitializer
@STRING_1 = private global [0 x i32] [i32 97, i32 0]
@STRING_2 = private global [0 x i32] [i32 97, i32 98, i32 99, i32 0]

declare void @Out_Ln()

declare void @Out_Int(i64, i64)

define internal i64 @HOTLoop1_Len([0 x i32]* %str) {
entry:
  %i = alloca i64
  %str1 = alloca [0 x i32]*
  store [0 x i32]* %str, [0 x i32]** %str1
  store i64 0, i64* %i
  store i64 -1, i64* %i
  br label %repeat

repeat:                                           ; preds = %repeat, %entry
  %i2 = load i64, i64* %i
  %addtmp = add i64 %i2, 1
  store i64 %addtmp, i64* %i
  %str3 = load [0 x i32]*, [0 x i32]** %str1
  %i4 = load i64, i64* %i
  %0 = load [0 x i32]*, [0 x i32]** %str1
  %idx = getelementptr [0 x i32], [0 x i32]* %0, i64 0, i64 %i4
  %idx5 = load i32, i32* %idx
  %1 = icmp eq i32 %idx5, 0
  br i1 %1, label %end, label %repeat

end:                                              ; preds = %repeat
  %i6 = load i64, i64* %i
  ret i64 %i6
}

define void @HOTLoop1_Test() {
entry:
  %0 = call i64 @HOTLoop1_Len([0 x i32]* @STRING_0)
  call void @Out_Int(i64 %0, i64 0)
  call void @Out_Ln()
  %1 = call i64 @HOTLoop1_Len([0 x i32]* @STRING_1)
  call void @Out_Int(i64 %1, i64 0)
  call void @Out_Ln()
  %2 = call i64 @HOTLoop1_Len([0 x i32]* @STRING_2)
  call void @Out_Int(i64 %2, i64 0)
  call void @Out_Ln()
  ret void
}

define i64 @output() {
entry:
  call void @HOTLoop1_Test()
  ret i64 0
}
