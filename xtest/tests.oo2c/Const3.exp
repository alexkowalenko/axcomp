; ModuleID = 'Const3'
source_filename = "Const3"

@STRING_0 = private global [4 x i32] [i32 102, i32 111, i32 111, i32 0]
@STRING_1 = private global [4 x i32] [i32 98, i32 97, i32 114, i32 0]

declare void @Out_Ln()

declare void @Out_String([0 x i32]*)

define internal void @Const3_P(i1 %b) {
entry:
  %b1 = alloca i1
  store i1 %b, i1* %b1
  br label %loop

loop:                                             ; preds = %ifcont, %entry
  br i1 false, label %then, label %elsif0

then:                                             ; preds = %loop
  call void @Out_String([0 x i32]* bitcast ([4 x i32]* @STRING_0 to [0 x i32]*))
  br label %end

elsif0:                                           ; preds = %loop
  %b2 = load i1, i1* %b1
  br i1 %b2, label %then3, label %ifcont

then3:                                            ; preds = %elsif0
  call void @Out_String([0 x i32]* bitcast ([4 x i32]* @STRING_1 to [0 x i32]*))
  br label %end

ifcont:                                           ; preds = %elsif0
  br label %loop

end:                                              ; preds = %then3, %then
  ret void
}

define void @Const3_Test() {
entry:
  call void @Const3_P(i1 true)
  call void @Out_Ln()
  ret void
}

define i64 @output() {
entry:
  call void @Const3_Test()
  ret i64 0
}
