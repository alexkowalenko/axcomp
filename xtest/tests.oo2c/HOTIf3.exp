; ModuleID = 'HOTIf3'
source_filename = "HOTIf3"

@STRING_0 = private global [0 x i32] [i32 97, i32 61, i32 84, i32 82, i32 85, i32 69, i32 0]
@STRING_1 = private global [0 x i32] [i32 97, i32 61, i32 70, i32 65, i32 76, i32 83, i32 69, i32 44, i32 32, i32 98, i32 61, i32 84, i32 82, i32 85, i32 69, i32 0]
@STRING_2 = private global [0 x i32] [i32 97, i32 61, i32 70, i32 65, i32 76, i32 83, i32 69, i32 44, i32 32, i32 98, i32 61, i32 70, i32 65, i32 76, i32 83, i32 69, i32 0]

declare void @Out_Ln()

declare void @Out_String([0 x i32]*)

define internal void @HOTIf3_If(i1 %a, i1 %b) {
entry:
  %b2 = alloca i1
  %a1 = alloca i1
  store i1 %a, i1* %a1
  store i1 %b, i1* %b2
  %a3 = load i1, i1* %a1
  br i1 %a3, label %then, label %elsif0

then:                                             ; preds = %entry
  call void @Out_String([0 x i32]* @STRING_0)
  br label %ifcont

elsif0:                                           ; preds = %entry
  %b4 = load i1, i1* %b2
  br i1 %b4, label %then5, label %else

then5:                                            ; preds = %elsif0
  call void @Out_String([0 x i32]* @STRING_1)
  br label %ifcont

else:                                             ; preds = %elsif0
  call void @Out_String([0 x i32]* @STRING_2)
  br label %ifcont

ifcont:                                           ; preds = %else, %then5, %then
  call void @Out_Ln()
  ret void
}

define void @HOTIf3_Test() {
entry:
  call void @HOTIf3_If(i1 true, i1 true)
  call void @HOTIf3_If(i1 false, i1 true)
  call void @HOTIf3_If(i1 false, i1 false)
  ret void
}

define i64 @output() {
entry:
  call void @HOTIf3_Test()
  ret i64 0
}
