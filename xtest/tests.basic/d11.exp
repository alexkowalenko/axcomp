; ModuleID = 'd11'
source_filename = "d11"

declare void @WriteInt(i64)

declare void @WriteBoolean(i1)

declare void @WriteLn()

define i1 @d11_eq(i64 %x, i64 %y) {
entry:
  %y2 = alloca i64
  %x1 = alloca i64
  store i64 %x, i64* %x1
  store i64 %y, i64* %y2
  %x3 = load i64, i64* %x1
  %y4 = load i64, i64* %y2
  %0 = icmp eq i64 %x3, %y4
  ret i1 %0
}

define i1 @d11_neq(i64 %x, i64 %y) {
entry:
  %y2 = alloca i64
  %x1 = alloca i64
  store i64 %x, i64* %x1
  store i64 %y, i64* %y2
  %x3 = load i64, i64* %x1
  %y4 = load i64, i64* %y2
  %0 = icmp ne i64 %x3, %y4
  ret i1 %0
}

define i64 @output() {
entry:
  %0 = call i1 @d11_eq(i64 1, i64 1)
  %1 = call i1 @d11_neq(i64 1, i64 1)
  %modtmp = and i1 %0, %1
  %2 = xor i1 %modtmp, true
  %3 = zext i1 %2 to i64
  ret i64 %3
}
