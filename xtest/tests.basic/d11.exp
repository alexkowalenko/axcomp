; ModuleID = 'd11'
source_filename = "d11"

define internal i1 @d11_eq(i64 %x, i64 %y) {
entry:
  %y2 = alloca i64
  %x1 = alloca i64
  store i64 %x, i64* %x1
  store i64 %y, i64* %y2
  %x3 = load i64, i64* %x1
  %y4 = load i64, i64* %y2
  %0 = icmp eq i64 %x3, %y4
  ret i1 %0
}

define internal i1 @d11_neq(i64 %x, i64 %y) {
entry:
  %y2 = alloca i64
  %x1 = alloca i64
  store i64 %x, i64* %x1
  store i64 %y, i64* %y2
  %x3 = load i64, i64* %x1
  %y4 = load i64, i64* %y2
  %0 = icmp ne i64 %x3, %y4
  ret i1 %0
}

define i64 @output() {
entry:
  %0 = call i1 @d11_eq(i64 1, i64 1)
  br i1 %0, label %and_next, label %and_end

and_next:                                         ; preds = %entry
  %1 = call i1 @d11_neq(i64 1, i64 1)
  br label %and_end

and_end:                                          ; preds = %and_next, %entry
  %and = phi i1 [ %0, %entry ], [ %1, %and_next ]
  %2 = xor i1 %and, true
  %3 = zext i1 %2 to i64
  ret i64 %3
}
