; ModuleID = 'Doors'
source_filename = "Doors"

@Doors_N = internal constant i64 100
@Doors_len = internal constant i64 101
@Doors_i = internal global i64 0
@Doors_j = internal global i64 0
@Doors_closed = internal global [101 x i1] zeroinitializer

declare void @Out_Ln()

declare void @Out_Int(i64, i64)

declare void @Out_Char(i32)

define i64 @output() {
entry:
  store i64 1, i64* @Doors_i
  br label %loop

loop:                                             ; preds = %forneg, %forpos, %entry
  %i = load i64, i64* @Doors_i
  %idx = getelementptr [101 x i1], [101 x i1]* @Doors_closed, i64 0, i64 %i
  store i1 true, i1* %idx
  %index = load i64, i64* @Doors_i
  %nextvar = add i64 %index, 1
  store i64 %nextvar, i64* @Doors_i
  %N = load i64, i64* @Doors_N
  br i1 true, label %forpos, label %forneg

forpos:                                           ; preds = %loop
  %loopcond = icmp sle i64 %nextvar, %N
  br i1 %loopcond, label %loop, label %afterloop

forneg:                                           ; preds = %loop
  %loopcond1 = icmp sge i64 %nextvar, %N
  br i1 %loopcond1, label %loop, label %afterloop

afterloop:                                        ; preds = %forneg, %forpos
  store i64 1, i64* @Doors_i
  br label %loop2

loop2:                                            ; preds = %forneg4, %forpos3, %afterloop
  store i64 1, i64* @Doors_j
  br label %while

forpos3:                                          ; preds = %end
  %loopcond18 = icmp sle i64 %nextvar16, %N17
  br i1 %loopcond18, label %loop2, label %afterloop5

forneg4:                                          ; preds = %end
  %loopcond19 = icmp sge i64 %nextvar16, %N17
  br i1 %loopcond19, label %loop2, label %afterloop5

afterloop5:                                       ; preds = %forneg4, %forpos3
  store i64 1, i64* @Doors_i
  br label %loop20

while:                                            ; preds = %ifcont, %loop2
  %j = load i64, i64* @Doors_j
  %len = load i64, i64* @Doors_len
  %0 = icmp slt i64 %j, %len
  br i1 %0, label %loop6, label %end

loop6:                                            ; preds = %while
  %j7 = load i64, i64* @Doors_j
  %i8 = load i64, i64* @Doors_i
  %modtmp = srem i64 %j7, %i8
  %1 = icmp eq i64 %modtmp, 0
  br i1 %1, label %then, label %ifcont

then:                                             ; preds = %loop6
  %closed = load [101 x i1], [101 x i1]* @Doors_closed
  %j9 = load i64, i64* @Doors_j
  %idx10 = getelementptr [101 x i1], [101 x i1]* @Doors_closed, i64 0, i64 %j9
  %idx11 = load i1, i1* %idx10
  %2 = xor i1 %idx11, true
  %j12 = load i64, i64* @Doors_j
  %idx13 = getelementptr [101 x i1], [101 x i1]* @Doors_closed, i64 0, i64 %j12
  store i1 %2, i1* %idx13
  br label %ifcont

ifcont:                                           ; preds = %then, %loop6
  %j14 = load i64, i64* @Doors_j
  %addtmp = add i64 %j14, 1
  store i64 %addtmp, i64* @Doors_j
  br label %while

end:                                              ; preds = %while
  %index15 = load i64, i64* @Doors_i
  %nextvar16 = add i64 %index15, 1
  store i64 %nextvar16, i64* @Doors_i
  %N17 = load i64, i64* @Doors_N
  br i1 true, label %forpos3, label %forneg4

loop20:                                           ; preds = %forneg22, %forpos21, %afterloop5
  %i24 = load i64, i64* @Doors_i
  %subtmp = sub i64 %i24, 1
  %modtmp25 = srem i64 %subtmp, 10
  %3 = icmp eq i64 %modtmp25, 0
  br i1 %3, label %then26, label %ifcont27

forpos21:                                         ; preds = %ifcont33
  %loopcond37 = icmp sle i64 %nextvar35, %N36
  br i1 %loopcond37, label %loop20, label %afterloop23

forneg22:                                         ; preds = %ifcont33
  %loopcond38 = icmp sge i64 %nextvar35, %N36
  br i1 %loopcond38, label %loop20, label %afterloop23

afterloop23:                                      ; preds = %forneg22, %forpos21
  call void @Out_Ln()
  store i64 1, i64* @Doors_i
  br label %loop39

then26:                                           ; preds = %loop20
  call void @Out_Ln()
  br label %ifcont27

ifcont27:                                         ; preds = %then26, %loop20
  %closed28 = load [101 x i1], [101 x i1]* @Doors_closed
  %i29 = load i64, i64* @Doors_i
  %idx30 = getelementptr [101 x i1], [101 x i1]* @Doors_closed, i64 0, i64 %i29
  %idx31 = load i1, i1* %idx30
  br i1 %idx31, label %then32, label %else

then32:                                           ; preds = %ifcont27
  call void @Out_Char(i32 45)
  call void @Out_Char(i32 32)
  br label %ifcont33

else:                                             ; preds = %ifcont27
  call void @Out_Char(i32 43)
  call void @Out_Char(i32 32)
  br label %ifcont33

ifcont33:                                         ; preds = %else, %then32
  %index34 = load i64, i64* @Doors_i
  %nextvar35 = add i64 %index34, 1
  store i64 %nextvar35, i64* @Doors_i
  %N36 = load i64, i64* @Doors_N
  br i1 true, label %forpos21, label %forneg22

loop39:                                           ; preds = %forneg41, %forpos40, %afterloop23
  %closed43 = load [101 x i1], [101 x i1]* @Doors_closed
  %i44 = load i64, i64* @Doors_i
  %idx45 = getelementptr [101 x i1], [101 x i1]* @Doors_closed, i64 0, i64 %i44
  %idx46 = load i1, i1* %idx45
  %4 = xor i1 %idx46, true
  br i1 %4, label %then47, label %ifcont49

forpos40:                                         ; preds = %ifcont49
  %loopcond53 = icmp sle i64 %nextvar51, %N52
  br i1 %loopcond53, label %loop39, label %afterloop42

forneg41:                                         ; preds = %ifcont49
  %loopcond54 = icmp sge i64 %nextvar51, %N52
  br i1 %loopcond54, label %loop39, label %afterloop42

afterloop42:                                      ; preds = %forneg41, %forpos40
  call void @Out_Ln()
  ret i64 0

then47:                                           ; preds = %loop39
  %i48 = load i64, i64* @Doors_i
  call void @Out_Int(i64 %i48, i64 0)
  call void @Out_Char(i32 32)
  br label %ifcont49

ifcont49:                                         ; preds = %then47, %loop39
  %index50 = load i64, i64* @Doors_i
  %nextvar51 = add i64 %index50, 1
  store i64 %nextvar51, i64* @Doors_i
  %N52 = load i64, i64* @Doors_N
  br i1 true, label %forpos40, label %forneg41
}
