; ModuleID = 'array15'
source_filename = "array15"

@array15_x = internal global [3 x i64] zeroinitializer

declare void @Out_Ln()

declare void @Out_Int(i64, i64)

define internal void @array15_f([3 x i64]* %a) {
entry:
  %a1 = alloca [3 x i64]*
  store [3 x i64]* %a, [3 x i64]** %a1
  %a2 = load [3 x i64]*, [3 x i64]** %a1
  %a3 = load [3 x i64]*, [3 x i64]** %a1
  %a4 = load [3 x i64]*, [3 x i64]** %a1
  %0 = load [3 x i64]*, [3 x i64]** %a1
  %idx = getelementptr [3 x i64], [3 x i64]* %0, i64 0, i64 0
  store i64 1, i64* %idx
  ret void
}

define i64 @output() {
entry:
  %x = load [3 x i64], [3 x i64]* @array15_x
  %idx = load i64, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @array15_x, i64 0, i64 0)
  call void @Out_Int(i64 %idx, i64 0)
  call void @Out_Ln()
  call void @array15_f([3 x i64]* @array15_x)
  %x1 = load [3 x i64], [3 x i64]* @array15_x
  %idx2 = load i64, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @array15_x, i64 0, i64 0)
  call void @Out_Int(i64 %idx2, i64 0)
  call void @Out_Ln()
  ret i64 0
}
