; ModuleID = 'g05'
source_filename = "g05"

@g05_a = internal global [3 x [3 x i64]] zeroinitializer
@g05_sum = internal global i64 0

declare void @WriteInt(i64)

declare void @WriteLn()

define i64 @output() {
entry:
  %x14 = alloca i64
  %y11 = alloca i64
  %x = alloca i64
  %y = alloca i64
  store i64 0, i64* %y
  br label %loop

loop:                                             ; preds = %afterloop2, %entry
  store i64 0, i64* %x
  br label %loop1

afterloop:                                        ; preds = %afterloop2
  store i64 0, i64* %y11
  br label %loop9

loop1:                                            ; preds = %loop1, %loop
  %x3 = load i64, i64* %x
  %y4 = load i64, i64* %y
  %addtmp = add i64 %x3, %y4
  %x5 = load i64, i64* %x
  %y6 = load i64, i64* %y
  %idx = getelementptr [3 x [3 x i64]], [3 x [3 x i64]]* @g05_a, i64 0, i64 %x5, i64 %y6
  store i64 %addtmp, i64* %idx
  %0 = load i64, i64* %x
  %nextvar = add i64 %0, 1
  store i64 %nextvar, i64* %x
  %loopcond = icmp sle i64 %nextvar, 2
  br i1 %loopcond, label %loop1, label %afterloop2

afterloop2:                                       ; preds = %loop1
  %1 = load i64, i64* %y
  %nextvar7 = add i64 %1, 1
  store i64 %nextvar7, i64* %y
  %loopcond8 = icmp sle i64 %nextvar7, 2
  br i1 %loopcond8, label %loop, label %afterloop

loop9:                                            ; preds = %afterloop13, %afterloop
  store i64 0, i64* %x14
  br label %loop12

afterloop10:                                      ; preds = %afterloop13
  %sum24 = load i64, i64* @g05_sum
  call void @WriteInt(i64 %sum24)
  call void @WriteLn()
  ret i64 0

loop12:                                           ; preds = %loop12, %loop9
  %a = load [3 x [3 x i64]], [3 x [3 x i64]]* @g05_a
  %x15 = load i64, i64* %x14
  %y16 = load i64, i64* %y11
  %idx17 = getelementptr [3 x [3 x i64]], [3 x [3 x i64]]* @g05_a, i64 0, i64 %x15, i64 %y16
  %idx18 = load i64, i64* %idx17
  call void @WriteInt(i64 %idx18)
  %sum = load i64, i64* @g05_sum
  %addtmp19 = add i64 %sum, 1
  store i64 %addtmp19, i64* @g05_sum
  %2 = load i64, i64* %x14
  %nextvar20 = add i64 %2, 1
  store i64 %nextvar20, i64* %x14
  %loopcond21 = icmp sle i64 %nextvar20, 2
  br i1 %loopcond21, label %loop12, label %afterloop13

afterloop13:                                      ; preds = %loop12
  call void @WriteLn()
  %3 = load i64, i64* %y11
  %nextvar22 = add i64 %3, 1
  store i64 %nextvar22, i64* %y11
  %loopcond23 = icmp sle i64 %nextvar22, 2
  br i1 %loopcond23, label %loop9, label %afterloop10
}
