; ModuleID = 'pointer02'
source_filename = "pointer02"

@pointer02_x = internal global i64* null
@pointer02_y = internal global i64 0

declare void @Out_Ln()

declare void @Out_Int(i64, i64)

define i64 @output() {
entry:
  %0 = call i64 @NEW_ptr(i64** @pointer02_x, i64 8)
  %1 = load i64*, i64** @pointer02_x
  %idx = getelementptr i64, i64* %1, i64 0
  store i64 5, i64* %idx
  %x = load i64*, i64** @pointer02_x
  %2 = load i64*, i64** @pointer02_x
  %idx1 = getelementptr i64, i64* %2, i64 0
  %idx2 = load i64, i64* %idx1
  call void @Out_Int(i64 %idx2, i64 0)
  call void @Out_Ln()
  store i64 5, i64* @pointer02_y
  %x3 = load i64*, i64** @pointer02_x
  %3 = load i64*, i64** @pointer02_x
  %idx4 = getelementptr i64, i64* %3, i64 0
  %idx5 = load i64, i64* %idx4
  %y = load i64, i64* @pointer02_y
  %addtmp = add i64 %idx5, %y
  %4 = load i64*, i64** @pointer02_x
  %idx6 = getelementptr i64, i64* %4, i64 0
  store i64 %addtmp, i64* %idx6
  %x7 = load i64*, i64** @pointer02_x
  %5 = load i64*, i64** @pointer02_x
  %idx8 = getelementptr i64, i64* %5, i64 0
  %idx9 = load i64, i64* %idx8
  call void @Out_Int(i64 %idx9, i64 0)
  call void @Out_Ln()
  call void @Out_Int(i64 8, i64 0)
  call void @Out_Ln()
  ret i64 0
}

declare i64 @NEW_ptr(i64**, i64)
