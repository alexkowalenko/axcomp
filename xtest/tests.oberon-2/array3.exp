; ModuleID = 'array3'
source_filename = "array3"

@array3_x = internal global [0 x i64] zeroinitializer
@array3_sum = internal global i64 0
@array3_i = internal global i64 0

declare void @Out_Ln()

declare void @Out_Int(i64, i64)

declare void @Out_Char(i32)

define i64 @output() {
entry:
  %i11 = alloca i64
  %i = alloca i64
  %0 = call i64 @NEW_Array([0 x i64]* @array3_x, i64 80)
  store i64 0, i64* %i
  br label %loop

loop:                                             ; preds = %forneg, %forpos, %entry
  %i1 = load i64, i64* %i
  %i2 = load i64, i64* %i
  %multmp = mul i64 %i1, %i2
  %i3 = load i64, i64* %i
  %addtmp = add i64 %multmp, %i3
  %addtmp4 = add i64 %addtmp, 1
  %i5 = load i64, i64* %i
  %idx = getelementptr [0 x i64], [0 x i64]* @array3_x, i64 0, i64 %i5
  store i64 %addtmp4, i64* %idx
  %1 = load i64, i64* %i
  %nextvar = add i64 %1, 1
  store i64 %nextvar, i64* %i
  br i1 true, label %forpos, label %forneg

forpos:                                           ; preds = %loop
  %loopcond = icmp sle i64 %nextvar, 9
  br i1 %loopcond, label %loop, label %afterloop

forneg:                                           ; preds = %loop
  %loopcond6 = icmp sge i64 %nextvar, 9
  br i1 %loopcond6, label %loop, label %afterloop

afterloop:                                        ; preds = %forneg, %forpos
  store i64 0, i64* %i11
  br label %loop7

loop7:                                            ; preds = %forneg9, %forpos8, %afterloop
  %x = load [0 x i64], [0 x i64]* @array3_x
  %i12 = load i64, i64* %i11
  %idx13 = getelementptr [0 x i64], [0 x i64]* @array3_x, i64 0, i64 %i12
  %idx14 = load i64, i64* %idx13
  call void @Out_Int(i64 %idx14, i64 0)
  call void @Out_Char(i32 32)
  %2 = load i64, i64* %i11
  %nextvar15 = add i64 %2, 1
  store i64 %nextvar15, i64* %i11
  br i1 true, label %forpos8, label %forneg9

forpos8:                                          ; preds = %loop7
  %loopcond16 = icmp sle i64 %nextvar15, 9
  br i1 %loopcond16, label %loop7, label %afterloop10

forneg9:                                          ; preds = %loop7
  %loopcond17 = icmp sge i64 %nextvar15, 9
  br i1 %loopcond17, label %loop7, label %afterloop10

afterloop10:                                      ; preds = %forneg9, %forpos8
  call void @Out_Ln()
  ret i64 0
}

declare i64 @NEW_Array([0 x i64]*, i64)
