; ModuleID = 'array3'
source_filename = "array3"

@array3_x = internal global [0 x i64]* null
@array3_sum = internal global i64 0
@array3_i = internal global i64 0

declare void @Out_Ln()

declare void @Out_Int(i64, i64)

declare void @Out_Char(i32)

define i64 @output() {
entry:
  %0 = call [0 x i64]* @NEW_Array(i64 80)
  store [0 x i64]* %0, [0 x i64]** @array3_x
  store i64 0, i64* @array3_i
  br label %loop

loop:                                             ; preds = %forneg, %forpos, %entry
  %i = load i64, i64* @array3_i
  %i1 = load i64, i64* @array3_i
  %multmp = mul i64 %i, %i1
  %i2 = load i64, i64* @array3_i
  %addtmp = add i64 %multmp, %i2
  %addtmp3 = add i64 %addtmp, 1
  %i4 = load i64, i64* @array3_i
  %1 = load [0 x i64]*, [0 x i64]** @array3_x
  %idx = getelementptr [0 x i64], [0 x i64]* %1, i64 0, i64 %i4
  store i64 %addtmp3, i64* %idx
  %index = load i64, i64* @array3_i
  %nextvar = add i64 %index, 1
  store i64 %nextvar, i64* @array3_i
  br i1 true, label %forpos, label %forneg

forpos:                                           ; preds = %loop
  %loopcond = icmp sle i64 %nextvar, 9
  br i1 %loopcond, label %loop, label %afterloop

forneg:                                           ; preds = %loop
  %loopcond5 = icmp sge i64 %nextvar, 9
  br i1 %loopcond5, label %loop, label %afterloop

afterloop:                                        ; preds = %forneg, %forpos
  store i64 0, i64* @array3_i
  br label %loop6

loop6:                                            ; preds = %forneg8, %forpos7, %afterloop
  %x = load [0 x i64]*, [0 x i64]** @array3_x
  %i10 = load i64, i64* @array3_i
  %2 = load [0 x i64]*, [0 x i64]** @array3_x
  %idx11 = getelementptr [0 x i64], [0 x i64]* %2, i64 0, i64 %i10
  %idx12 = load i64, i64* %idx11
  call void @Out_Int(i64 %idx12, i64 2)
  call void @Out_Char(i32 32)
  %index13 = load i64, i64* @array3_i
  %nextvar14 = add i64 %index13, 1
  store i64 %nextvar14, i64* @array3_i
  br i1 true, label %forpos7, label %forneg8

forpos7:                                          ; preds = %loop6
  %loopcond15 = icmp sle i64 %nextvar14, 9
  br i1 %loopcond15, label %loop6, label %afterloop9

forneg8:                                          ; preds = %loop6
  %loopcond16 = icmp sge i64 %nextvar14, 9
  br i1 %loopcond16, label %loop6, label %afterloop9

afterloop9:                                       ; preds = %forneg8, %forpos7
  call void @Out_Ln()
  ret i64 0
}

declare [0 x i64]* @NEW_Array(i64)
