; ModuleID = 'halt'
source_filename = "halt"

@halt_x = internal global i64 0
@halt_i = internal global i64 0

declare void @HALT(i64)

define i64 @output() {
entry:
  store i64 1, i64* @halt_i
  br label %loop

loop:                                             ; preds = %forneg, %forpos, %entry
  call void @HALT(i64 3)
  %index = load i64, i64* @halt_i
  %nextvar = add i64 %index, 1
  store i64 %nextvar, i64* @halt_i
  br i1 true, label %forpos, label %forneg

forpos:                                           ; preds = %loop
  %loopcond = icmp sle i64 %nextvar, 3
  br i1 %loopcond, label %loop, label %afterloop

forneg:                                           ; preds = %loop
  %loopcond1 = icmp sge i64 %nextvar, 3
  br i1 %loopcond1, label %loop, label %afterloop

afterloop:                                        ; preds = %forneg, %forpos
  ret i64 0
}
