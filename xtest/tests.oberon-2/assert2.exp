; ModuleID = 'assert2'
source_filename = "assert2"

@assert2_x = internal global i64 0

define i64 @output() {
entry:
  %x = load i64, i64* @assert2_x
  %0 = icmp eq i64 %x, 0
  %1 = xor i1 %0, true
  br i1 %1, label %assert, label %merge

assert:                                           ; preds = %entry
  %2 = call i64 @HALT(i64 3)
  br label %merge

merge:                                            ; preds = %assert, %entry
  %x1 = load i64, i64* @assert2_x
  %3 = icmp ne i64 %x1, 0
  %4 = xor i1 %3, true
  br i1 %4, label %assert2, label %merge3

assert2:                                          ; preds = %merge
  %5 = call i64 @HALT(i64 2)
  br label %merge3

merge3:                                           ; preds = %assert2, %merge
  ret i64 0
}

declare i64 @HALT(i64)
