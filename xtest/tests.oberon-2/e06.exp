; ModuleID = 'e06'
source_filename = "e06"

@e06_x = internal global i64 0
@e06_i = internal global i64 0

define i64 @output() {
entry:
  store i64 0, i64* @e06_x
  store i64 0, i64* @e06_i
  br label %loop

loop:                                             ; preds = %forneg, %forpos, %entry
  %x = load i64, i64* @e06_x
  %i = load i64, i64* @e06_i
  %addtmp = add i64 %x, %i
  store i64 %addtmp, i64* @e06_x
  %index = load i64, i64* @e06_i
  %nextvar = add i64 %index, 1
  store i64 %nextvar, i64* @e06_i
  br i1 true, label %forpos, label %forneg

forpos:                                           ; preds = %loop
  %loopcond = icmp sle i64 %nextvar, 9
  br i1 %loopcond, label %loop, label %afterloop

forneg:                                           ; preds = %loop
  %loopcond1 = icmp sge i64 %nextvar, 9
  br i1 %loopcond1, label %loop, label %afterloop

afterloop:                                        ; preds = %forneg, %forpos
  %x2 = load i64, i64* @e06_x
  ret i64 %x2
}
