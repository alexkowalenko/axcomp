; ModuleID = 'string9'
source_filename = "string9"

@string9_x = internal global [0 x i32]* null
@string9_y = internal global [0 x i32]* null
@string9_z = internal global [0 x i32]* null
@STRING_0 = private global [7 x i32] [i32 72, i32 101, i32 108, i32 108, i32 111, i32 33, i32 0]

declare void @Out_Ln()

declare void @Out_String([0 x i32]*)

define internal [0 x i32]* @string9_id([0 x i32]* %s) {
entry:
  %s1 = alloca [0 x i32]*
  store [0 x i32]* %s, [0 x i32]** %s1
  %s2 = load [0 x i32]*, [0 x i32]** %s1
  ret [0 x i32]* %s2
}

define i64 @output() {
entry:
  store [0 x i32]* bitcast ([7 x i32]* @STRING_0 to [0 x i32]*), [0 x i32]** @string9_x
  %0 = call i64 @NEW_String([0 x i32]** @string9_y, i64 5)
  %x = load [0 x i32]*, [0 x i32]** @string9_x
  store [0 x i32]* %x, [0 x i32]** @string9_z
  %x1 = load [0 x i32]*, [0 x i32]** @string9_x
  call void @Out_String([0 x i32]* %x1)
  call void @Out_Ln()
  %x2 = load [0 x i32]*, [0 x i32]** @string9_x
  %1 = call [0 x i32]* @string9_id([0 x i32]* %x2)
  call void @Out_String([0 x i32]* %1)
  call void @Out_Ln()
  %z = load [0 x i32]*, [0 x i32]** @string9_z
  call void @Out_String([0 x i32]* %z)
  call void @Out_Ln()
  ret i64 0
}

declare i64 @NEW_String([0 x i32]**, i64)
