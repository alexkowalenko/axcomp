; ModuleID = 'set3'
source_filename = "set3"

@set3_x = internal global i64 0
@set3_y = internal global i64 0
@set3_z = internal global i64 0
@set3_a = internal global i64 0
@STRING_0 = private global [10 x i32] [i32 32, i32 105, i32 110, i32 32, i32 115, i32 101, i32 116, i32 32, i32 120, i32 0]
@STRING_1 = private global [8 x i32] [i32 70, i32 105, i32 110, i32 105, i32 115, i32 104, i32 33, i32 0]

declare void @Out_Ln()

declare void @Out_Int(i64, i64)

declare void @Out_String([0 x i32]*)

define i64 @output() {
entry:
  store i64 3, i64* @set3_a
  %a = load i64, i64* @set3_a
  %0 = shl i64 1, %a
  %1 = or i64 0, %0
  store i64 %1, i64* @set3_z
  %2 = load i64, i64* @set3_z
  %3 = or i64 %2, 16
  store i64 %3, i64* @set3_z
  %z = load i64, i64* @set3_z
  %4 = and i64 %z, 8
  %5 = icmp ugt i64 %4, 0
  br i1 %5, label %then, label %ifcont

then:                                             ; preds = %entry
  call void @Out_Int(i64 3, i64 0)
  call void @Out_String([0 x i32]* bitcast ([10 x i32]* @STRING_0 to [0 x i32]*))
  call void @Out_Ln()
  br label %ifcont

ifcont:                                           ; preds = %then, %entry
  %z1 = load i64, i64* @set3_z
  %6 = and i64 %z1, 16
  %7 = icmp ugt i64 %6, 0
  br i1 %7, label %then2, label %ifcont3

then2:                                            ; preds = %ifcont
  call void @Out_Int(i64 4, i64 0)
  call void @Out_String([0 x i32]* bitcast ([10 x i32]* @STRING_0 to [0 x i32]*))
  call void @Out_Ln()
  br label %ifcont3

ifcont3:                                          ; preds = %then2, %ifcont
  call void @Out_Ln()
  %8 = load i64, i64* @set3_z
  %9 = and i64 %8, -17
  store i64 %9, i64* @set3_z
  %z4 = load i64, i64* @set3_z
  %10 = and i64 %z4, 16
  %11 = icmp ugt i64 %10, 0
  br i1 %11, label %then5, label %ifcont6

then5:                                            ; preds = %ifcont3
  call void @Out_Int(i64 4, i64 0)
  call void @Out_String([0 x i32]* bitcast ([10 x i32]* @STRING_0 to [0 x i32]*))
  call void @Out_Ln()
  br label %ifcont6

ifcont6:                                          ; preds = %then5, %ifcont3
  %z7 = load i64, i64* @set3_z
  %12 = and i64 %z7, 8
  %13 = icmp ugt i64 %12, 0
  br i1 %13, label %then8, label %ifcont9

then8:                                            ; preds = %ifcont6
  call void @Out_Int(i64 3, i64 0)
  call void @Out_String([0 x i32]* bitcast ([10 x i32]* @STRING_0 to [0 x i32]*))
  call void @Out_Ln()
  br label %ifcont9

ifcont9:                                          ; preds = %then8, %ifcont6
  call void @Out_String([0 x i32]* bitcast ([8 x i32]* @STRING_1 to [0 x i32]*))
  call void @Out_Ln()
  ret i64 0
}
