; ModuleID = 'len'
source_filename = "len"

@len_i = internal global i64 0
@len_y = internal global [7 x i64] zeroinitializer

declare void @Out_Ln()

declare void @Out_Int(i64, i64)

define i64 @output() {
entry:
  %y = load [7 x i64], [7 x i64]* @len_y
  call void @Out_Int(i64 7, i64 0)
  call void @Out_Ln()
  store i64 0, i64* @len_i
  br label %loop

loop:                                             ; preds = %forneg, %forpos, %entry
  %i = load i64, i64* @len_i
  %i1 = load i64, i64* @len_i
  %multmp = mul i64 %i, %i1
  %i2 = load i64, i64* @len_i
  %idx = getelementptr [7 x i64], [7 x i64]* @len_y, i64 0, i64 %i2
  store i64 %multmp, i64* %idx
  %index = load i64, i64* @len_i
  %nextvar = add i64 %index, 1
  store i64 %nextvar, i64* @len_i
  %y3 = load [7 x i64], [7 x i64]* @len_y
  br i1 true, label %forpos, label %forneg

forpos:                                           ; preds = %loop
  %loopcond = icmp sle i64 %nextvar, 6
  br i1 %loopcond, label %loop, label %afterloop

forneg:                                           ; preds = %loop
  %loopcond4 = icmp sge i64 %nextvar, 6
  br i1 %loopcond4, label %loop, label %afterloop

afterloop:                                        ; preds = %forneg, %forpos
  store i64 0, i64* @len_i
  br label %loop5

loop5:                                            ; preds = %forneg7, %forpos6, %afterloop
  %y9 = load [7 x i64], [7 x i64]* @len_y
  %i10 = load i64, i64* @len_i
  %idx11 = getelementptr [7 x i64], [7 x i64]* @len_y, i64 0, i64 %i10
  %idx12 = load i64, i64* %idx11
  call void @Out_Int(i64 %idx12, i64 0)
  call void @Out_Ln()
  %index13 = load i64, i64* @len_i
  %nextvar14 = add i64 %index13, 1
  store i64 %nextvar14, i64* @len_i
  %y15 = load [7 x i64], [7 x i64]* @len_y
  br i1 true, label %forpos6, label %forneg7

forpos6:                                          ; preds = %loop5
  %loopcond16 = icmp sle i64 %nextvar14, 6
  br i1 %loopcond16, label %loop5, label %afterloop8

forneg7:                                          ; preds = %loop5
  %loopcond17 = icmp sge i64 %nextvar14, 6
  br i1 %loopcond17, label %loop5, label %afterloop8

afterloop8:                                       ; preds = %forneg7, %forpos6
  ret i64 0
}
